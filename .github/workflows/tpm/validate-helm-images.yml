#
# MIT License
#
# (C) Copyright 2023 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---
name: Chart Testing

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      charts:
        description: List of Changed Charts
        required: true
        type: string
      artifactory-hostname:
        description: Docker registry name to pre-auhtenticate to pull chart images
        type: string
        default: artifactory.algol60.net
      helm-version:
        description: 'Version of Helm to Intall'
        required: false
        type: string
        default: 'v3.11.3'
    secrets:
      github-token:
        description: Github authorization token (needed for discovering latest Helm)
        required: true
      artifactory-username:
        description: Username for Helm repository and Docker registry
        required: true
      artifactory-password:
        description: Password for Helm repository and Docker registry
        required: true
jobs:
  run:
    name: Chart Testing
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix: ${{ fromJSON(inputs.charts) }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Login to Artifactory Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.artifactory-hostname }}
          username: ${{ secrets.artifactory-username }}
          password: ${{ secrets.artifactory-password }}

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ inputs.helm-version }}

      - name: Get List of Images in Chart.yaml
        run: |
          yq '.annotations["artifacthub.io/images"]' ./charts/${{ matrix.chart }}/Chart.yaml | \
          yq '.[].image' | sort -u > ".${{ matrix.chart }}-chart.yaml"

      - name: Get List of Images From helm template
        run: |
          helm template ./charts/tpm-provisioner | yq '..|.image? | select(.)' | \
          sort -u > ".${{ matrix.chart }}-helm-template"

      - name: Validate Chart refrences the same images that are in the helm template
        run: |
          set -o pipefail
          if ! diff --brief ".${{ matrix.chart }}-helm-template" ".${{ matrix.chart }}-chart.yaml"; then
            echo "Images referenced in Chart.yaml do not match the ones found in the helm chart" >> $GITHUB_STEP_SUMMARY
            diff -u ".${{ matrix.chart }}-helm-template" ".${{ matrix.chart }}-chart.yaml" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Validate Images are Available
        run: |
          set -o pipefail
          failure=0
          for image in $(cat ".${{ matrix.chart }}-chart.yaml") ; do
            if ! docker manifest inspect "$image"; then
               failure=1
               echo "Missing Image: $image" >> $GITHUB_STEP_SUMMARY
            fi
          done

          exit $failure
